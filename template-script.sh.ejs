#!/bin/bash

SCRIPT_HOME="$( cd "$( dirname "$0" )" && pwd )"
cd $SCRIPT_HOME

<% images.forEach(function(image){%>

<% if (image.build){ %>

build_<%= image.containerName %>() {
        echo ">>> build_<%= image.containerName %>"
        sudo docker build -t <%= image.containerName %> .
}
start_<%= image.containerName %>() {
        echo ">>> start_<%= image.containerName %>"
        sudo docker run --name <%= image.containerName %> <%= helpers.ports(image) %> <%= helpers.links(image) %> <%= helpers.env(image) %> <%= helpers.volumes(image) %> -d <%= image.containerName %>  <%- helpers.cmd(image) %>
}
  
<% } else if (image.name){%>

start_<%= image.containerName %>() {
        echo ">>> start_<%= image.containerName %>"
        sudo docker run --name <%= image.containerName %> <%= helpers.ports(image) %> <%= helpers.links(image) %> <%= helpers.env(image) %> <%= helpers.volumes(image) %> -d <%= image.name %>  <%- helpers.cmd(image) %>
}
        
<% } %>



stop_<%= image.containerName %>() {
        echo ">>> Running stop_<%= image.containerName %>"
        sudo docker stop <%= image.containerName %>
        sudo docker rm <%= image.containerName %>
}
<% }); %>
<% images.forEach(function(image){%>
run_<%= image.containerName %>() {
        echo "Running run_<%= image.containerName %>"
        build_<%= image.containerName %>
        stop_<%= image.containerName %>
        start_<%= image.containerName %>
}
<%})%>

<% images.forEach(function(image){%>
push_<%= image.containerName %>() {
        echo ">>> Running push_<%= image.containerName %>"
        sudo docker push <%= image.name %>
}
<%})%>
<% images.forEach(function(image){%>
pull_<%= image.containerName %>() {
        echo ">>> Running pull_<%= image.containerName %>"
        sudo docker pull <%= image.name %>
}
<%})%>
pull() {
        echo ">>> Running pull"
<% images.forEach(function(image){%>
        <% if (!image.build) { %>sudo docker pull <%= image.name %> <% } %>
<%})%>
}


stop() {
        echo ">>> Running stop"
<% images.forEach(function(image){%>
        stop_<%= image.containerName %>
<%})%>
}
start() {
        echo ">>> Running start"
<% images.forEach(function(image){%>
        start_<%= image.containerName %>
<%})%>

}
build() {
        echo ">>> Running build"
<% images.forEach(function(image){%>
        <% if (image.build){ %>
        build_<%= image.containerName %>
        <% } %>
<%})%>
}
push() {
        echo ">>> Running push"
<% images.forEach(function(image){%>
        push_<%= image.containerName %>
<%})%>
}




run() {
        echo ">>> Running run"
        pull
        build
        stop
        start
}

usage() {
        echo "USAGE: $0 <action>"
        echo "Actions:"
        echo "###########       MANAGE A SINGLE CONTAINERS      ###########"
        
        <% images.forEach(function(image){%>
        echo "          ---> '<%= image.containerName %>' container"
        echo ""
        echo "          run_<%= image.containerName %>   build, stop and start '<%= image.containerName %>' container"
        echo "          build_<%= image.containerName %> build '<%= image.containerName %>' container"
        echo "          start_<%= image.containerName %> start '<%= image.containerName %>' container"
        echo "          stop_<%= image.containerName %>  stop '<%= image.containerName %>' container"
        echo "          push_<%= image.containerName %>  push '<%= image.containerName %>' container"
        echo "          pull_<%= image.containerName %>  pull '<%= image.containerName %>' container"
        echo ""        
        <%})%>

        echo "###########       MANAGE ALL CONTAINERS AT ONCE   ###########"
        echo "          run     build, stop and start all containers"
        echo "          build   build all containers"
        echo "          start   start all containers"
        echo "          stop    stop containers"
        echo "          push    push containers"
        echo "          pull    pull containers"
        echo ""
        echo ""
}


case $1 in
        run)
                run;;
        build)
                build;;
        start)
                start;;
        push)
                push;;
        pull)
                pull;;
        start_hub)
                start_hub;;
        start_test)
                start_test;;
        stop)
                stop;;
        stop_hub)
                stop_hub;;
        stop_test)
                stop_test;;
        *)
                usage
                exit 1
        ;;
esac
